#ifndef _PixelMap_template_
#define _PixelMap_template_

#include <cstring>

#include "Matrix.template"
#include "Color.template"

namespace james
{
	namespace core
	{
		/*
		 * PixelMap is a generic implementation for all possibly necessary
		 * pixel matrices.
		 */
		
		template<int width, int height>
		class PixelMap : public Matrix<Color<int>, width, height>
		{
		public:
			PixelMap()
				: Matrix<Color<int>, width, height>(), map(_matrixElements)
			{
				Color<int> nullColor;
				
				nullColor.SetRed(0);
				nullColor.SetGreen(0);
				nullColor.SetBlue(0);
				
				Clear(nullColor);
			}
			
			virtual ~PixelMap()
			{
			}
			
			Color<int> GetPixel(int x, int y)
			{
				return _matrixElements[x][y];
			}
		
		public:
			Array2<Color<int>, width, height> &map;
		
		protected:
			using Matrix<Color<int>, width, height>::Clear;
		
		protected:
			using Matrix<Color<int>, width, height>::_matrixElements;
		};
	}
}

#endif
